version: '3.8'

services:
  web:
    build: .
    command: gunicorn wedding.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./:/usr/src/app/
      - static_volume:/home/app/web/static
    expose:
      - 8000
    env_file:
      - ./wedding/.env
    depends_on:
      - db
  db:
    image: postgres:13.1-alpine
    ports: 
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=wedding
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/static
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  certs:
  html:
  vhost: